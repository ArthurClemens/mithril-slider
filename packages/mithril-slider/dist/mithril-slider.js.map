{"version":3,"file":"mithril-slider.js","sources":["../src/prop.js","../src/touch.js","../src/classes.js","../src/index.js","../src/css.js"],"sourcesContent":["\nexport default x => {\n  let p = x;\n  return args => {\n    if (args === undefined) {\n      return p;\n    } else {\n      p = args;\n    }\n  };\n};\n","/* global Hammer */\nimport \"hammerjs\";\n\nexport const Touch = ({ el, orientation, onStart, onMove, onEnd }) => {\n  const hammer = new Hammer.Manager(el, {});\n  hammer.add(new Hammer.Pan({\n    direction: orientation === \"vertical\"\n      ? Hammer.DIRECTION_VERTICAL\n      : orientation === \"all\"\n        ? Hammer.DIRECTION_ALL\n        : Hammer.DIRECTION_HORIZONTAL,\n    threshold: 0\n  }));\n  hammer.on(\"panstart\", onStart);\n  hammer.on(\"panmove\", onMove);\n  hammer.on(\"panend\", onEnd);\n\n  return {\n    destroy: () => {\n      hammer.off(\"panstart\", onStart);\n      hammer.off(\"panmove\", onMove);\n      hammer.off(\"panend\", onEnd);\n    }\n  };\n};","\nexport const classes = {\n  slider:    \"mithril-slider\",\n  content:   \"mithril-slider__content\",\n  before:    \"mithril-slider__before\",\n  after:     \"mithril-slider__after\"\n};\n","import m from \"mithril\";\nimport prop from \"./prop\";\nimport { Touch } from \"./touch\";\nimport { classes } from \"./classes\";\n\nconst DEFAULT_DURATION = 160;\nconst DEFAULT_CANCEL_DRAG_FACTOR = 1 / 5;\nconst DEFAULT_GROUP_SIZE = 1;\nconst DEFAULT_ORIENTATION = \"vertical\";\nconst DEFAULT_DIRECTION = 1;\nconst DEFAULT_OFFSET_X = 0;\nconst DEFAULT_OFFSET_Y = 0;\n\nconst view = ({state, attrs}) => {\n  if (attrs.sliderController) {\n    attrs.sliderController(state);\n  }\n  const currentIndex = state.index();\n  // sizes need to be set each redraw because of screen resizes\n  state.groupBy(attrs.groupBy || 1);\n  const contentEl = state.contentEl;\n  if (contentEl) {\n    state.updateContentSize(contentEl);\n  }\n  return m(\"div\",\n    {\n      class: [\n        classes.slider,\n        attrs.class || \"\"\n      ].join(\" \")\n    },\n    [\n      attrs.before\n        ? m(\".\" + classes.before, attrs.before)\n        : null,\n      m(\"div\",\n        {\n          class: classes.content,\n          onupdate: ({dom}) => {\n            if (state.inited) {\n              return;\n            }\n            if (dom.childNodes.length > 0) {\n              state.setContentEl(dom);\n              state.updateContentSize(dom);\n              state.touch = new Touch({\n                el: dom,\n                orientation: attrs.orientation,\n                onStart: state.handleDragStart,\n                onMove: state.handleDrag,\n                onEnd: state.handleDragEnd\n              });\n              state.inited = true;\n            }\n          },\n          onremove: () => state.touch && state.touch.destroy()\n        },\n        state.list().map((data, listIndex) =>\n          attrs.page({\n            data,\n            listIndex,\n            currentIndex\n          })\n        )\n      ),\n      attrs.after\n        ? m(\".\" + classes.after, attrs.after)\n        : null\n    ]\n  );\n};\n\nconst oninit = vnode => {\n  const attrs = vnode.attrs;\n  const list = prop([]);\n  if (attrs.pageData) {\n    attrs.pageData().then(result => initWithResult(result));\n  }\n  const duration = parseInt(attrs.duration, 10) || DEFAULT_DURATION;\n  const index = prop(attrs.index || -1);\n  let contentEl;\n  let pageSize = 0;\n  const groupBy = prop(attrs.groupBy || DEFAULT_GROUP_SIZE);\n  const cancelDragFactor = attrs.cancelDragFactor || DEFAULT_CANCEL_DRAG_FACTOR;\n  const isVertical = attrs.orientation === DEFAULT_ORIENTATION;\n  const dir = attrs.rtl ? -1 : DEFAULT_DIRECTION;\n  const pageOffsetX = attrs.pageOffsetX || DEFAULT_OFFSET_X;\n  const pageOffsetY = attrs.pageOffsetY || DEFAULT_OFFSET_Y;\n\n  const initWithResult = result => {\n    list(result);\n    // First redraw so that pages are drawn\n    // continuation in view's oncreate\n    m.redraw();\n  };\n\n  const setIndex = idx => {\n    const oldIndex = index();\n    if (oldIndex !== idx) {\n      index(idx);\n      m.redraw();\n      if (attrs.getState) {\n        const el = contentEl;\n        const page = getPageEl(el, index());\n        attrs.getState({\n          index: idx,\n          hasNext: hasNext(),\n          hasPrevious: hasPrevious(),\n          pageEl: page\n        });\n      }\n    }\n  };\n\n  const getPageEl = (el, idx) => el.childNodes[idx];\n\n  const createAttrs = value => {\n    const x = isVertical ? \"0\" : value + \"px\";\n    const y = isVertical ? value + \"px\" : \"0\";\n    const z = \"0\";\n    const attrs = [x, y, z].join(\", \");\n    return \"translate3d(\" + attrs + \")\";\n  };\n\n  const setTransitionStyle = (el, value) => {\n    const style = el.style;\n    style.transform = style[\"-webkit-transform\"] = style[\"-moz-transform\"] = style[\"-ms-transform\"] = createAttrs(value);\n  };\n\n  const setTransitionDurationStyle = duration => {\n    contentEl.style[\"-webkit-transition-duration\"] = contentEl.style[\"transition-duration\"] = duration + \"ms\";\n  };\n\n  const goTo = (idx, duration) => {\n    if (idx < 0 || idx > list().length - 1) {\n      return;\n    }\n    updateContentSize(contentEl);\n    if (duration !== undefined) {\n      setTransitionDurationStyle(duration);\n    }\n    setTransitionStyle(contentEl, -dir * idx * pageSize);\n    setIndex(idx);\n  };\n\n  const normalizedStep = (orientation = 0) => {\n    const idx = index();\n    const size = groupBy();\n    const min = 0;\n    const max = list().length;\n    const next = idx + (orientation * size);\n    // make sure that last item aligns at the right\n    if ((next + size) > max) {\n      return max - size;\n    }\n    if (next < min) {\n      return min;\n    }\n    return next;\n  };\n\n  const updateContentSize = el => {\n    const prop = isVertical ? \"height\" : \"width\";\n    const page = el.childNodes[0];\n    if (page.getBoundingClientRect()[prop]) {\n      pageSize = page.getBoundingClientRect()[prop];\n      el.style[prop] = (list().length * pageSize) + \"px\";\n    }\n  };\n\n  const goCurrent = (duration = 0) => {\n    updateContentSize(contentEl);\n    setTransitionDurationStyle(duration);\n    goTo(normalizedStep());\n  };\n\n  const goNext = (dur = duration) => (\n    setTransitionDurationStyle(dur),\n    index() < list().length ? goTo(normalizedStep(1)) : goTo(normalizedStep())\n  );\n\n  const goPrevious = (dur = duration) => (\n    setTransitionDurationStyle(dur),\n    index() > 0 ? goTo(normalizedStep(-1)) : goTo(normalizedStep())\n  );\n\n  const hasNext = () => index() + groupBy() < list().length;\n\n  const hasPrevious = () => index() > 0;\n\n  const setContentEl = el => {\n    contentEl = el;\n    updateContentSize(el);\n    goCurrent();\n  };\n\n  const handleDragStart = () => (\n    updateContentSize(contentEl),\n    setTransitionDurationStyle(0)\n  );\n\n  const handleDrag = e => {\n    const el = contentEl;\n    const page = getPageEl(el, index());\n    const delta = isVertical\n      ? e.deltaY + pageOffsetY\n      : e.deltaX + pageOffsetX;\n    const origin = isVertical\n      ? page.offsetTop\n      : dir === -1\n        ? page.offsetLeft - page.parentNode.clientWidth + page.clientWidth\n        : page.offsetLeft;\n    setTransitionStyle(el, delta - origin);\n    e.preventDefault();\n  };\n\n  const calculateTransitionDuration = velocity => {\n    const el = contentEl;\n    const page = getPageEl(el, index());\n    const width = page.clientWidth;\n    const speed = Math.abs(velocity) || 1;\n    let dur = 1 / speed * width;\n    if (dur > duration) {\n      dur = duration;\n    }\n    return dur;\n  };\n\n  const handleDragEnd = e => {\n    const dur = calculateTransitionDuration(e.velocity);\n    const delta = isVertical ? e.deltaY : e.deltaX;\n    if (Math.abs(delta) > pageSize * groupBy() * cancelDragFactor) {\n      if (dir * delta < 0) {\n        goNext(dur);\n      } else {\n        goPrevious(dur);\n      }\n    } else {\n      goCurrent(dur);\n    }\n  };\n\n  Object.assign(vnode.state, {\n    // component methods\n    list,\n    contentEl,\n    setContentEl,\n    handleDrag,\n    handleDragStart,\n    handleDragEnd,\n    groupBy,\n    updateContentSize,\n\n    // public interface\n    index,\n    hasNext,\n    hasPrevious,\n    goTo,\n    goCurrent,\n    goNext,\n    goPrevious\n  });\n};\n\nexport const slider = {\n  oninit,\n  view\n};\n","\nexport const css = [{\n  \".mithril-slider\": {\n    overflow: \"hidden\",\n\n    \" .mithril-slider__content\": {\n      transitionProperty: \"transform\",\n      transitionTimingFunction: \"ease-out\",\n      // transition-duration set in js\n      transform: \"translate3d(0, 0, 0)\"\n    }\n  }\n}];\n\n"],"names":["p","x","undefined","args","Touch","el","orientation","onStart","onMove","onEnd","hammer","Hammer","Manager","add","Pan","DIRECTION_VERTICAL","DIRECTION_ALL","DIRECTION_HORIZONTAL","on","off","classes","slider","attrs","vnode","list","prop","pageData","then","initWithResult","result","duration","parseInt","index","contentEl","pageSize","groupBy","cancelDragFactor","isVertical","dir","rtl","pageOffsetX","pageOffsetY","redraw","setIndex","idx","getState","page","getPageEl","hasNext","hasPrevious","childNodes","createAttrs","value","join","setTransitionStyle","style","transform","setTransitionDurationStyle","goTo","length","normalizedStep","size","max","next","updateContentSize","getBoundingClientRect","goCurrent","goNext","dur","goPrevious","setContentEl","handleDragStart","handleDrag","delta","e","deltaY","deltaX","origin","offsetTop","offsetLeft","parentNode","clientWidth","preventDefault","calculateTransitionDuration","width","Math","abs","velocity","handleDragEnd","state","sliderController","currentIndex","m","class","before","content","dom","inited","touch","destroy","map","data","listIndex","after","css"],"mappings":"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"}